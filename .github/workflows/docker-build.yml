name: Build & Deploy Wisecow with ngrok

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1Ô∏è‚É£ Checkout repository
    - name: Checkout code
      uses: actions/checkout@v3

    # 2Ô∏è‚É£ Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # 3Ô∏è‚É£ Docker login
    - name: Docker login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 4Ô∏è‚É£ Build Docker image
    - name: Build Docker image
      run: docker build -t sabarisurya/wisecow:latest .

    # 5Ô∏è‚É£ Push Docker image to Docker Hub
    - name: Push Docker image
      run: docker push sabarisurya/wisecow:latest

    # 6Ô∏è‚É£ Install kubectl
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.27.4'

    # 7Ô∏è‚É£ Install kind (Kubernetes in Docker)
    - name: Install kind
      run: |
        curl -Lo kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
        chmod +x kind
        sudo mv kind /usr/local/bin/kind

    # 8Ô∏è‚É£ Create kind cluster
    - name: Create kind cluster
      run: kind create cluster --name wisecow-cluster

    # 9Ô∏è‚É£ Load Docker image into kind
    - name: Load image into kind
      run: kind load docker-image sabarisurya/wisecow:latest --name wisecow-cluster

    # üîü Deploy Wisecow app to kind cluster
    - name: Deploy Wisecow app
      run: |
        # TLS secret (skip if missing)
        kubectl create secret tls wisecow-tls --cert=tls.crt --key=tls.key || true

        # Apply deployment & service
        kubectl apply -f wisecow-deployment.yaml
        kubectl apply -f wisecow-service.yaml

        # Update image in deployment
        kubectl set image deployment/wisecow wisecow=sabarisurya/wisecow:latest

        # Wait for pods to start
        sleep 30

        # Output pod info
        kubectl get pods -o wide

    # 1Ô∏è‚É£1Ô∏è‚É£ Install ngrok
    - name: Install ngrok
      run: |
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
        sudo apt update && sudo apt install ngrok -y

    # 1Ô∏è‚É£2Ô∏è‚É£ Start ngrok tunnel and expose app
    - name: Start ngrok tunnel
      run: |
        ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
        nohup ngrok http 4499 --log=stdout > ngrok.log 2>&1 &
        sleep 10

        # Extract public URL
        NGROK_URL=$(curl -s http://127.0.0.1:4040/api/tunnels | grep -o 'https://[0-9a-z]*\.ngrok-free.app' | head -n1)
        
        if [ -z "$NGROK_URL" ]; then
          echo "‚ùå ngrok tunnel failed to start or URL not found."
          echo "Check ngrok.log for details:"
          tail -n 20 ngrok.log
          exit 1
        else
          echo "‚úÖ Wisecow app is live at: $NGROK_URL"
        fi
